/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.engine;

import java.awt.Toolkit;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
import org.bson.types.ObjectId;
import service.EngineHomeService;
import validation.Validation;

/**
 *
 * @author hetpatel
 */
public class EngineHome extends javax.swing.JFrame {

    /**
     * Creates new form EngineHome      
     */
    private int keyPressCount = 0;
    String name;
    ObjectId userId;
    EngineHomeService service = new EngineHomeService();
    ArrayList<Document> recordsByPlane;
    int row = -1;
    
    public EngineHome(String name, ObjectId userId) throws ParseException {
        initComponents();
//        getContentPane().setPreferredSize(Toolkit.getDefaultToolkit().getScreenSize());
//        pack();
        setLocationRelativeTo(null);
        setResizable(false);
        setVisible(true);
        this.name = name;
        this.userId = userId;
        nameLabel.setText(name);        
        fillTable();
    }
    
    private void fillTable() throws ParseException{
        
       // display data in table
        orderTable.setModel(
        service.getEngineRecords()
        );
        
        recordsByPlane = service.getArrayData();
        
    }
    
    private void refillTable(){
        
        JOptionPane.showMessageDialog(this, "No Records Found!");
        orderTable.setModel(
        service.returnTableModel(null)
        );
        recordsByPlane = service.getArrayData();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        searchBy = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JLabel();
        refreshBtn = new javax.swing.JLabel();
        updateStatusBtn = new javax.swing.JLabel();
        newOrderBtn = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldKeyPressed(evt);
            }
        });

        searchBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plane Number", "Date", "Order Status", "Given By" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search By");

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Plane Number", "Engine", "Ordered By"
            }
        ));
        orderTable.setRowHeight(50);
        orderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(orderTable);

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));

        nameLabel.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(255, 255, 255));
        nameLabel.setText("Name");

        deleteBtn.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/delete_16x16.gif"))); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtnMouseClicked(evt);
            }
        });

        refreshBtn.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(255, 255, 255));
        refreshBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/refresh1.png"))); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshBtnMouseClicked(evt);
            }
        });

        updateStatusBtn.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        updateStatusBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateStatusBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updateStatusBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/update icon.png"))); // NOI18N
        updateStatusBtn.setText("Update Status");
        updateStatusBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateStatusBtnMouseClicked(evt);
            }
        });

        newOrderBtn.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        newOrderBtn.setForeground(new java.awt.Color(255, 255, 255));
        newOrderBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newOrderBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Right3Green.png"))); // NOI18N
        newOrderBtn.setText("Place New Order");
        newOrderBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newOrderBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(updateStatusBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 39, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateStatusBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(265, 265, 265)
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/EngineHome.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(55, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyPressed
        // TODO add your handling code here:
        keyPressCount++;
        
        if(evt.getKeyCode() == 10){
        
            String searchFor = searchField.getText();
            String searchByText = (String) searchBy.getSelectedItem();
            
if (keyPressCount >=4 ){
            if(searchFor.length() > 0){
                switch(searchByText){

                    case "Plane Number":
                        ArrayList<Document> recordsByPlane =  service.fetchByFilter("planeNumber", searchFor);

                        if(recordsByPlane.size() > 0){

                            orderTable.setModel(
                            service.returnTableModel(recordsByPlane)
                            );


                        }else{

                            refillTable();
                        }

                        break;

                    case "Date":
                        
                        if(new Validation().dateValidate(searchFor)){
                        
                            ArrayList<Document> recordsByDate = service.fetchByFilter("date", searchFor);

                            if(recordsByDate.size() > 0){
                                orderTable.setModel(
                                service.returnTableModel(recordsByDate)
                                );
                            }else{
                                refillTable();

                            }
                        }else{
                        
                            refillTable();
                        
                        }
                    
                        break;

                    case "Order Status":
                        
                        ArrayList<Document> recordsByStatus = service.fetchByFilter("status", searchFor);
                        
                        if(recordsByStatus.size() > 0){
                            orderTable.setModel(
                            service.returnTableModel(recordsByStatus)
                            );
                            recordsByPlane = service.getArrayData();
                        }else{

                            refillTable();
                        }                                
                        break;

                    case "Given By":
                        
                        ArrayList<Document> recordsByName = service.fetchByFilter("name", searchFor);
                        
                        if(recordsByName.size() > 0){

                            orderTable.setModel(
                            service.returnTableModel(recordsByName)
                            );
                        }else{

                            refillTable();
                        }
                        break;
                    default:
                        refillTable();
                        break;

                }

            }
        }
        else{
            refillTable();
        }
        }
    }//GEN-LAST:event_searchFieldKeyPressed

    private void updateStatusBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateStatusBtnMouseClicked
        // TODO add your handling code here:
        
        if(row > -1){
            
            System.out.println(recordsByPlane);
            System.out.println(row +" "+recordsByPlane.get(row).get("_id"));
            
            OrderStatus os = new OrderStatus((ObjectId) recordsByPlane.get(row).get("_id"));
            os.setDefaultCloseOperation(1);
        }else{
            
            JOptionPane.showMessageDialog(this, "Please Select Row");
        }
       
        
        
    }//GEN-LAST:event_updateStatusBtnMouseClicked

    private void orderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTableMouseClicked
        // TODO add your handling code here:
        
        JTable source = (JTable)evt.getSource();
        row = source.rowAtPoint( evt.getPoint() );
        
        
    }//GEN-LAST:event_orderTableMouseClicked

    private void refreshBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshBtnMouseClicked
        // TODO add your handling code here:
        
        service = new EngineHomeService();
        try {
            fillTable();
        } catch (ParseException ex) {
            Logger.getLogger(EngineHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshBtnMouseClicked

    private void newOrderBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOrderBtnMouseClicked
        // TODO add your handling code here:
        AddEngineOrder aeo = new AddEngineOrder(this.userId, service.getArrayData());
        aeo.setDefaultCloseOperation(1);
        
    }//GEN-LAST:event_newOrderBtnMouseClicked

    private void deleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseClicked
        // TODO add your handling code here:
        if(row > -1){
            
            service.deleteOrder(recordsByPlane.get(row).get("_id"));
            JOptionPane.showMessageDialog(this, "Deleted");
            service = new EngineHomeService();
            try {
                fillTable();
            } catch (ParseException ex) {
                Logger.getLogger(EngineHome.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else{
            
            JOptionPane.showMessageDialog(this, "Please Select Row");
        }
    }//GEN-LAST:event_deleteBtnMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel newOrderBtn;
    private javax.swing.JTable orderTable;
    private javax.swing.JLabel refreshBtn;
    private javax.swing.JComboBox<String> searchBy;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel updateStatusBtn;
    // End of variables declaration//GEN-END:variables
}
